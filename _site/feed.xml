<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home</title>
    <description>/home
</description>
    <link>https://rounakdatta.github.io/</link>
    <atom:link href="https://rounakdatta.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 06 Sep 2018 11:58:58 +0530</pubDate>
    <lastBuildDate>Thu, 06 Sep 2018 11:58:58 +0530</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Quill Audits - Smart Contract Security Analysis</title>
        <description>&lt;p&gt;Quill Audits is a smart contract analysis platform provided by QuillHash Technologies. It’s a fully automated platform for getting smart contracts checked for security vulnerabilities as well as efficiency of code. &lt;strong&gt;Oyente&lt;/strong&gt; for Ethereum is currently a trusted automated open-source smart-contract analysis tool. Quill Audits uses tweaked Oyente back-end with other sophistications to analyze contracts under-the-hood and return analysis results. Also, it uses &lt;strong&gt;Solidity-Coverage&lt;/strong&gt; to provide code coverage tools to analyze if there are are redundant lines of code by running unit tests. Often, redundant lines of code are required to be replaced / removed. Quill Audits is powered by Node.js and is an extremely fast and usable tool for smart contract security analysis.&lt;/p&gt;

&lt;p&gt;Quill Audits platform provides for manual auditing as well. The platform also provides an escrow platform to request for expert contract auditing at the least bid.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*fVizVy5bQ9j-845RwXjhBg.png&quot; alt=&quot;Quill Audits Architecture&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
I’ve also wrote a Medium article &lt;a href=&quot;https://medium.com/quillhash/quill-audits-the-smart-contract-security-audit-platform-9ea1950ad6e&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Jul 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/07/21/quillaudits.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/07/21/quillaudits.html</guid>
        
        
      </item>
    
      <item>
        <title>ResXme - The ultimate resume parsing tool</title>
        <description>&lt;p&gt;ResXme is a resume-parsing tool built to automate the process of resume classification based on required criteria. ResXme tries to utilise the best of open-source softwares available to improve &lt;b&gt;accuracy&lt;/b&gt; and &lt;b&gt;scalability&lt;/b&gt;. The core architecture of ResXme works on techniques of information mining from rich text resources, store them efficienctly and help them to be retrived with speed. The entire model is built as a web-app powered by Flask (Python) backend. Uses open-source NLP libraries like SpaCy, NLTK as well as NoSQL databases to &lt;i&gt;power and scale&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/vr1nYID9xD0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Thu, 21 Jun 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/06/21/resxme.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/06/21/resxme.html</guid>
        
        
      </item>
    
      <item>
        <title>CorrectLy - The Grammar Engine</title>
        <description>&lt;p&gt;CorrectLy is a &lt;b&gt;English language and grammar-correction engine&lt;/b&gt;. CorrectLy’s favourite competitor is Grammarly. Uses core NLP as well as deep learning techniques to correct spelling errors, verb-noun agreements, verb-preposition-noun agreements, understand sentence context and help suggest more natural sentences.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/maVkhZotEVM&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Thu, 21 Jun 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/06/21/correctly.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/06/21/correctly.html</guid>
        
        
      </item>
    
      <item>
        <title>Ayuda - The Next-gen P2P Microfinance system</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.techgig.com/codegladiators/blockchain&quot;&gt;&lt;img src=&quot;https://static.techgig.com/Themes/Release/images/cg2018_images/cg2018-logo.png&quot; alt=&quot;TechGig CodeGladiator 2018&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SatoshiNextTechLab&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/32188729?s=200&amp;amp;v=4&quot; alt=&quot;Satoshi Next Tech Lab&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://s3.amazonaws.com/divum_test/Muthu/240418_114906.png&quot; alt=&quot;NIPP Blockchain Challenge 2018&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This project won the &lt;strong&gt;second prize of ₹1,00,000 at the TG Blockchain Hackathon&lt;/strong&gt; and the &lt;strong&gt;first prize of ₹1,00,000 at NIPP Blockchain Startup Challenge&lt;/strong&gt;.&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-ayuda&quot;&gt;What is Ayuda&lt;/h2&gt;

&lt;p&gt;Ayuda is a not for profit, blockchain based peer-peer money lending platform. Our platform connects lenders and borrowers from all across the globe because we believe that your will to help someone is much greater than the miles supporting you. The platform makes sure that every person using the platform is benefitted. Doing this we are able to sustain a proper give and take a situation where everyone is benefitted. The platform allows a lender to partially pay for a loan request. We use an innovative dynamic-interest rate method to incentivize our lenders.In this way, the lenders will pool as much money as possible to get more incentive. Our state-of-art algorithm decides the interest rate for the lenders dynamically on the basis of the proportion of money paid by a lender for a particular loan while maintaining the fixed interest rate for the borrower.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/If_9i4WQWQ8&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hyperledger.org/&quot;&gt;&lt;img src=&quot;https://i.imgur.com/YUyaXmf.png&quot; alt=&quot;HyperLedger&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;&lt;img src=&quot;https://i.imgur.com/eVpGHxM.png&quot; alt=&quot;Node.js&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Not an Open-Source project&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jun 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/06/04/ayuda.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/06/04/ayuda.html</guid>
        
        
      </item>
    
      <item>
        <title>ProcEUra - Blockchain based e-Procurement System</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Healthier procurement leads to healthier economies&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ethereum.org/&quot;&gt;&lt;img src=&quot;https://image.ibb.co/ftY1fo/ethereum.png&quot; alt=&quot;Powered by Ethereum&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blockchain.topcoder.com/bsic-incubator&quot;&gt;&lt;img src=&quot;https://i.imgur.com/8focZ4B.jpg&quot; alt=&quot;Topcoder BSIC Incubator 2018&quot; /&gt;&lt;/a&gt;              &lt;a href=&quot;https://github.com/SatoshiNextTechLab&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/32188729?s=200&amp;amp;v=4&quot; alt=&quot;Satoshi Next Tech Lab&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A blockhain based e-procurement platform which helps in streamlining the procurement process by making it more open, transparent and fast. Our main goals are to keep the middlemen out, to make sure the best bidder finds the best dealer, ensure that public data is truly public and common citizen’s money isn’t fiddled with.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;The product is currently live at : &lt;a href=&quot;http://teamsatoshi.pythonanywhere.com&quot;&gt;teamsatoshi.pythonanywhere.com&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;h4 id=&quot;concept-presentation&quot;&gt;Concept Presentation&lt;/h4&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/gsy3hwn_c9c&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/wHM7EWjD_iY&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h4 id=&quot;whitepaper&quot;&gt;Whitepaper&lt;/h4&gt;

&lt;iframe src=&quot;https://drive.google.com/file/d/1wIKR7gG3-esUwT77z3uqp3N6d-HWxqCO/preview&quot; frameborder=&quot;0&quot; style=&quot;overflow:hidden;height:480;width:100%&quot; width=&quot;100%&quot; height=&quot;580&quot;&gt;&lt;/iframe&gt;

&lt;h4 id=&quot;quick-offline-demo&quot;&gt;Quick Offline Demo&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
git clone https://github.com/rounakdatta/procEUra
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
cd procEUra
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
python3 ./app/app.py  
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Head over to &lt;a href=&quot;http://localhost:5000&quot;&gt;localhost:5000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://metamask.io/&quot;&gt;&lt;img src=&quot;https://i0.wp.com/cdng.c3dt.com/icon/3265891-com.wallet.metamask.png&quot; alt=&quot;Metamask&quot; /&gt;&lt;/a&gt;       &lt;a href=&quot;https://github.com/ethereum/web3.js/&quot;&gt;&lt;img src=&quot;https://image.ibb.co/f8U7Lo/web3.jpg&quot; alt=&quot;Web3.JS&quot; /&gt;&lt;/a&gt;   &lt;a href=&quot;http://solidity.readthedocs.io/en/v0.4.21/&quot;&gt;&lt;img src=&quot;https://image.ibb.co/c8xit8/sol_jpeg.jpg&quot; alt=&quot;Solidity&quot; /&gt;&lt;/a&gt;   &lt;a href=&quot;http://truffleframework.com/&quot;&gt;&lt;img src=&quot;https://image.ibb.co/f3jDt8/truffle.png&quot; alt=&quot;Truffle&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.python.org/&quot;&gt;&lt;img src=&quot;https://i0.wp.com/cdnb.c3dt.com/icon/744996-com.study.python.png&quot; alt=&quot;Python&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://www.oraclize.it/&quot;&gt;&lt;img src=&quot;https://logo.clearbit.com/oraclize.it&quot; alt=&quot;Oraclize&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hits.dwyl.io/936a185caaa266bb9cbe981e9e05cb/936a185caaa266bb9cbe981e9e05cb.github.io&quot;&gt;&lt;img src=&quot;http://hits.dwyl.io/936a185caaa266bb9cbe981e9e05cb/936a185caaa266bb9cbe981e9e05cb.github.io.svg&quot; alt=&quot;HitCount&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/936a185caaa266bb9cbe981e9e05cb/936a185caaa266bb9cbe981e9e05cb.github.io&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 27 May 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/05/27/bsic-2018.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/05/27/bsic-2018.html</guid>
        
        
      </item>
    
      <item>
        <title>Decentralized lottery</title>
        <description>&lt;p&gt;This is an assignment for the application to &lt;strong&gt;QuillHash&lt;/strong&gt; for their Blockchain Developer Internship for summer 2018.&lt;/p&gt;

&lt;h4 id=&quot;local-usage&quot;&gt;Local usage&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/rounakdatta/eth-lottery.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;testrpc&lt;/code&gt; (on a separate terminal)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;truffle compile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;truffle migrate&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;on-remix-idehttpsremixethereumorg&quot;&gt;On &lt;a href=&quot;https://remix.ethereum.org/&quot;&gt;Remix IDE&lt;/a&gt;&lt;/h4&gt;

&lt;h3 id=&quot;smart-contract&quot;&gt;Smart Contract&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Lottery()&lt;/code&gt; constuctor accepts the winning number from the Owner and stores it as SHA3 hash (used in Solidity as &lt;code class=&quot;highlighter-rouge&quot;&gt;keccak256(payload)&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requestToken()&lt;/code&gt; can be called by participants of the lottery to request any amount of tokens (total 1000000 tokens available). Here, 1 token costs 1 ether and in case of fractional payment, the excess is refunded.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makeGuess()&lt;/code&gt; can be called by participants to guess a number and spend a token. There’s the security of refund in case the number is out of range.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;closeGame()&lt;/code&gt; can be called by the Owner to stop the lottery and find out the winner by matching the hash.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;winnerAddress()&lt;/code&gt; will fetch the address of the winning user.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getPrice()&lt;/code&gt; can be called by the winner to receive 50% of the total ether in the contract in his / her account and transferring the remaining 50% to the Owner address.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;No winner&lt;/b&gt; : The entire amount of ethers present in the smart contract is transferred to the Owner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;issues&quot;&gt;Issues&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;In case multiple users guess the winning number, the last one to guess will be declared the winner.&lt;/li&gt;
  &lt;li&gt;The user won’t be able to request tokens once the 1000000 tokens are exhausted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/eth-lottery&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Apr 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/04/02/eth-lottery.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/04/02/eth-lottery.html</guid>
        
        
      </item>
    
      <item>
        <title>Terribly Tiny Tales Internship Assignment</title>
        <description>&lt;p&gt;This is an assignment for the application to &lt;strong&gt;Terribly Tiny Tales&lt;/strong&gt; for their Software Engineering Internship for summer 2018.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The text is first web-scraped using requests, cleaned and put into data-structure&lt;/li&gt;
  &lt;li&gt;Uses trie data-structure to store the words (and their breakups)&lt;/li&gt;
  &lt;li&gt;Uses list-of-lists to store the word set (word, frequency)&lt;/li&gt;
  &lt;li&gt;Flask web-sever to render the content to HTML tables&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;local-usage&quot;&gt;Local usage&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/rounakdatta/terriblytinytales.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;working&quot;&gt;Working&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;First, the script scrapes the text file from &lt;a href=&quot;http://terriblytinytales.com/test.txt&quot;&gt;here&lt;/a&gt; using &lt;em&gt;requests&lt;/em&gt; module.
 The entire text is split into words and converted to lower case.&lt;/li&gt;
  &lt;li&gt;Then, the words are put into trie data-structure as well as added to the final_list &lt;em&gt;[ Σ[‘key’, ‘count’] ]&lt;/em&gt; with count=0.
 Whenever there is a collision (the word exists), the final_list only is updated (count increased).&lt;/li&gt;
  &lt;li&gt;Apart from this, the trie data-structure implemented here has attributes data (char), list of children, branch_end, count and has functions for addition of data as well as finding if data exists.&lt;/li&gt;
  &lt;li&gt;To render a frontend to it, Flask is used. The API to the above algorithm is &lt;em&gt;give_count(n)&lt;/em&gt; which is called from Flask &lt;em&gt;app.py&lt;/em&gt; to get the final_list.
 To render it, &lt;em&gt;tables.py&lt;/em&gt; converts it into HTML table and creates &lt;em&gt;result.html&lt;/em&gt; (of course using &lt;em&gt;os&lt;/em&gt; py-module) which is then displayed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s a quick visualization of the trie data-structure :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                   *
                /     \
              a         b
            /   \       |
          ap     as     ba
          /\      |     / \
        app apk   ask  bac  bak
                        |     |
                       back  bake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Scripting and markup languages used : &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;HTML&lt;/strong&gt;&lt;br /&gt;
Frameworks used : &lt;strong&gt;Flask&lt;/strong&gt;&lt;br /&gt;
PaaS used : &lt;strong&gt;Heroku&lt;/strong&gt;, &lt;strong&gt;PythonAnywhere&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/rounakdatta/terriblytinytales/blob/master/demo/demo.gif&quot; alt=&quot;Sample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The demo is currently live at &lt;a href=&quot;http://tttales.tk&quot;&gt;tttales.tk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/terriblytinytales&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Mar 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/03/18/terriblytinytales.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/03/18/terriblytinytales.html</guid>
        
        
      </item>
    
      <item>
        <title>Who is my Roommate</title>
        <description>&lt;p&gt;Our University admits a large troop of students for undergraduation. And so the hostel booking process becomes difficult (when lame servers add to the crowd problem). But that’s totally out of our hands. What this tiny tool could do is host the entire student hostel database when the correct data is inputted by the crowd &lt;em&gt;after hostel booking is over&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/who-roommate.png&quot; alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The site is currently live at &lt;a href=&quot;http://hostelroo.ml/&quot;&gt;hostelroo.ml&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Know your future roommate&lt;/li&gt;
  &lt;li&gt;Quickly reach out to a friend’s room&lt;/li&gt;
  &lt;li&gt;Make the hostels database more open&lt;/li&gt;
  &lt;li&gt;Request a roommate swap&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Got over 500 registrations and 15k views in a couple of days&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Made in an evening just for fun and mass convenience&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hosted freely on &lt;strong&gt;PythonAnywhere&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/who-is-my-roommate&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Feb 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/02/13/who-is-my-roommate.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/02/13/who-is-my-roommate.html</guid>
        
        
      </item>
    
      <item>
        <title>Computer Science Books Download</title>
        <description>&lt;p&gt;Quickly download all the books from books.goalkicker.com&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Get the books stored into the current directory&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get the books stored with their original filenames&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The open-source content is written by the beautiful people at StackOverflow and compiled in the form of short, concise, informative e-books. Text content is released under Creative Commons BY-SA. This site isn’t affilated with StackOverflow.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/books.goalkicker-dl&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Feb 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/02/10/books-goalkeeper-dl.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/02/10/books-goalkeeper-dl.html</guid>
        
        
      </item>
    
      <item>
        <title>eLab Report Generator</title>
        <description>&lt;p&gt;Quickly get your eLab record generated&lt;/p&gt;

&lt;p&gt;Usage instructions are documented &lt;a href=&quot;https://github.com/rounakdatta/elab-report-maker/blob/master/README.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Doesn’t matter if questions are incomplete in between&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Accepts C, C++, Java, Python as the available options for program evaluation&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Evaluates only the completed and 100% verified questions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Collects all the evaluation reports in PNG format, converts them to PDF and concatenates all the PDFs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Single PDF file shareable with classmates to share progress / as final eLab submission report&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Uses Python library - &lt;em&gt;requests&lt;/em&gt; (for getting the reports) and &lt;em&gt;img2pdf&lt;/em&gt; (for converting to PDF) instead of (resource heavy and difficult-to-use) Selenium.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response time : 10m (best case)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Support - 2nd year &lt;code class=&quot;highlighter-rouge&quot;&gt;CSE (ADA, Java)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;IT (ADA, Java)&lt;/code&gt;, 1st year &lt;code class=&quot;highlighter-rouge&quot;&gt;PDD&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/elab-report.png&quot; alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A demo version is currently live at &lt;a href=&quot;http://elabreport.ml/&quot;&gt;elabreport.ml&lt;/a&gt;. Recommended to use Google Colab for the purpose. The response time isn’t lightning fast because eLab servers are slow!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
Status : Contact if you&#39;d like to maintain this project furthur.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/elab-quick-print&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Feb 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/02/08/elab-quick-print.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/02/08/elab-quick-print.html</guid>
        
        
      </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home</title>
    <description>/home
</description>
    <link>https://rounakdatta.github.io/</link>
    <atom:link href="https://rounakdatta.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 12 Feb 2018 01:58:42 +0530</pubDate>
    <lastBuildDate>Mon, 12 Feb 2018 01:58:42 +0530</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Computer Science Books Download</title>
        <description>&lt;p&gt;Quickly download all the books from books.goalkicker.com&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Get the books stored into the current directory&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get the books stored with their original filenames&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The open-source content is written by the beautiful people at StackOverflow and compiled in the form of short, concise, informative e-books. Text content is released under Creative Commons BY-SA. This site isn’t affilated with StackOverflow.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/books.goalkicker-dl&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Feb 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/02/10/books-goalkeeper-dl.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/02/10/books-goalkeeper-dl.html</guid>
        
        
      </item>
    
      <item>
        <title>eLab Quick Print</title>
        <description>&lt;p&gt;Quickly get your eLab record generated&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Doesn’t matter if questions are incomplete in between&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Evaluates only the completed and verified questions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Collects all the evaluation reports in JPG format, converts them to PDF and concatenates all the PDFs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Single PDF file shareable with classmates to share progress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Uses Python requests, BeautifulSoup instead of (resource heavy and difficult-to-use) Selenium.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;This project is ongoing and is expected to be completed by the end of February 2018.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/elab-quick-print&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Feb 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/02/08/elab-quick-print.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/02/08/elab-quick-print.html</guid>
        
        
      </item>
    
      <item>
        <title>Fake News Detection</title>
        <description>&lt;p&gt;&lt;em&gt;Secured second position&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Team 10 - NightOwls : &lt;em&gt;Niladri Shekhar Dutt&lt;/em&gt;, &lt;em&gt;Arko Chatterjee&lt;/em&gt;, &lt;em&gt;Saurav Saha&lt;/em&gt;, &lt;em&gt;Rounak Datta&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;27th Jan - 28th Jan 2018&lt;/p&gt;

&lt;p&gt;by IET Chapter, India&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=aZzxZA_KfXY&amp;amp;feature=youtu.be&quot;&gt;Demo video&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;/h2&gt;

&lt;p&gt;Often sensational news is created and spread through social media to achieve intended end. On the other hand, it may also involve narration of a true fact however being deliberately exaggerated. This may also affect the affect the importance of serious news media. The problem is to identify the authenticity of the news and online content. Equally important problem is to identify the bots involved in spreading false news.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/demo.gif&quot; alt=&quot;Demo&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;approach&quot;&gt;Approach&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The problem can be broken down into 3 statements :-&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Use NLP to check the authenticity of a news article.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;If the user has a query about the authenticity of a search query then he/she can directly search on our platform and using our custom algorithm we output a confidence score.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Check the authenticity of a news source.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Articles can be analyzed by feeding them to a machine learning model (Passive Aggressive Classifier) which predicts the genuinity of the content after it’s trained through predefined datasets of classified real vs fake news.&lt;/li&gt;
  &lt;li&gt;Search terms can be analyzed by doing a Google search (first 100 entries) and and ensuring if the news corresponding to the keywords have been covered by reliable news sources and aggregators. For every search term covered by a reliable news source it recieves a score of +1, while we heavily penalize fake sources. If multiple fake sources cover the news then we penalize the truth score even harder. We also look for keywords like ‘hoax’, ‘fake’, etc in the payload content.&lt;/li&gt;
  &lt;li&gt;An URL (news source) can be analyzed if it’s authentic by checking it in our database of true news provider and false news provider.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;application&quot;&gt;Application&lt;/h3&gt;

&lt;p&gt;When the fake-news detector is hosted locally / on a cloud platform, it can predict fake news with reasonable accuracy. Since edge cases of fake-news detection are controversial, the tool outputs a probability percentage instead of a rigid label.&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
make
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will start the local server at localhost:8000.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Deps&lt;/strong&gt;: sklearn, pandas, django, requests, bs4&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/xcheck&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Jan 2018 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2018/01/28/srm-iet-hackathon-18.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2018/01/28/srm-iet-hackathon-18.html</guid>
        
        
      </item>
    
      <item>
        <title>Flappy Bird</title>
        <description>&lt;p&gt;Minimal version of Flappy Bird implemented using HTML and JavaScript [Phaser]&lt;/p&gt;

&lt;p&gt;To add submodules to a repository,&lt;/p&gt;

&lt;p&gt;$ &lt;strong&gt;git submodule add &amp;lt;&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To update the submodules to the latest commit,&lt;/p&gt;

&lt;p&gt;$ &lt;strong&gt;git submodule update –remote –merge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Play the game &lt;a href=&quot;https://rounakdatta.github.io/flappy/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/flappy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Dec 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/12/26/flappybird.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/12/26/flappybird.html</guid>
        
        
      </item>
    
      <item>
        <title>Never-Lose-Tic-Tac-Toe 💪</title>
        <description>&lt;p&gt;Optimized minimax algorithm in C# to build a Tic-Tac-Toe which never loses to you *wynk*&lt;/p&gt;

&lt;p&gt;This was done for fun as a first attempt at &lt;a href=&quot;https://kwoc.kossiitkgp.in/&quot;&gt;Kharagpur Winter of Code&lt;/a&gt; (KWoC).&lt;/p&gt;

&lt;p&gt;Find pre-requisites of using this application and usage instructions &lt;a href=&quot;https://github.com/rounakdatta/TIC-TAC-TOE/blob/master/README.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/TIC-TAC-TOE&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Dec 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/12/08/tic-tac-toe.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/12/08/tic-tac-toe.html</guid>
        
        
      </item>
    
      <item>
        <title>Gmail Attachments Fetcher</title>
        <description>&lt;p&gt;Intuitive, useful, complete interface for fetching your Gmail attachments from a particular sender&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gmail-attachments.png&quot; alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This was done for fun as a first attempt at &lt;a href=&quot;https://kwoc.kossiitkgp.in/&quot;&gt;Kharagpur Winter of Code&lt;/a&gt; (KWoC).&lt;/p&gt;

&lt;p&gt;Find pre-requisites of using this application and usage instructions &lt;a href=&quot;https://github.com/rounakdatta/gmail-attachments/blob/master/README.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/gmail-attachments&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Dec 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/12/06/gmail-attachments.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/12/06/gmail-attachments.html</guid>
        
        
      </item>
    
      <item>
        <title>SRM Network Login</title>
        <description>&lt;p&gt;&lt;em&gt;SRM University Unofficial Network Login Android Application&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/srmnetlogin.png&quot; alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a lightning fast network login application made using &lt;strong&gt;Tasker&lt;/strong&gt;, ~~not Android Studio~~.&lt;/p&gt;

&lt;p&gt;This relies on sending an HTTP request directly rather than through the browser.&lt;/p&gt;

&lt;p&gt;The original script written by @thewisenerd can be found &lt;a href=&quot;https://github.com/thewisenerd/check.point.automaton&quot;&gt;here&lt;/a&gt;. This script is packaged and modded into this present application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v1&lt;/strong&gt; : using qPython; and the UI wasn’t intuitive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v2&lt;/strong&gt; : using Termux (with silent script execution)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Deps&lt;/em&gt; : (python, pip-requests, pip-rsa) on Termux, Termux:Task&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/tasker-ed&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SRM University Unofficial Network Login Desktop Application&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/srmnetloginlinux.png&quot; alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is another lightning fast network login application made for Desktop OSs (Linux / Ubuntu / MacOS) using QtPython.&lt;/p&gt;

&lt;p&gt;Same &lt;a href=&quot;https://github.com/thewisenerd/check.point.automaton&quot;&gt;login script&lt;/a&gt; was used.&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/network-login&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 12 Nov 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/11/12/srmnetlogin.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/11/12/srmnetlogin.html</guid>
        
        
      </item>
    
      <item>
        <title>BARADX : Track your Satellite</title>
        <description>&lt;p&gt;The TTC Dashboard for BARADX&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/baradximg.jpeg&quot; alt=&quot;BARADX&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Presently,&lt;/p&gt;

&lt;p&gt;• Get input packets from two Arduinos&lt;/p&gt;

&lt;p&gt;• Put the respective parameters in the corresponding fields&lt;/p&gt;

&lt;p&gt;• Plot the latitude-longitude in the Maps API {GMaps, OpenStreetMap, BingMaps}&lt;/p&gt;

&lt;p&gt;• Display gauges and bars&lt;/p&gt;

&lt;p&gt;• Watch your satellite navigate across the globe&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/baradx&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Sep 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/09/14/baradx-proj.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/09/14/baradx-proj.html</guid>
        
        
      </item>
    
      <item>
        <title>pyxcy - The C++ code editor made using Python</title>
        <description>&lt;p&gt;GUI framework used : Tkinter&lt;/p&gt;

&lt;p&gt;Language support : C / C++&lt;/p&gt;

&lt;p&gt;Main features :&lt;/p&gt;

&lt;p&gt;• Keyword colouration&lt;/p&gt;

&lt;p&gt;• Line numbering&lt;/p&gt;

&lt;p&gt;• Auto-indentation&lt;/p&gt;

&lt;p&gt;• Auto-save&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/pyxcy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Sep 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/09/07/pyxcy-proj.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/09/07/pyxcy-proj.html</guid>
        
        
      </item>
    
      <item>
        <title>Serial Port Communication between μC and PC</title>
        <description>&lt;p&gt;A GUI interface was made using C# which had the following resposibilities :&lt;/p&gt;

&lt;p&gt;❇ Collecting the input values from user&lt;/p&gt;

&lt;p&gt;❇ Parse the given values into a 32-byte string&lt;/p&gt;

&lt;p&gt;❇ Send to the microcontroller through RF&lt;/p&gt;

&lt;p&gt;❇ Scan for input from the port continuously&lt;/p&gt;

&lt;p&gt;❇ Output string received as a string containing output values&lt;/p&gt;

&lt;p&gt;❇ Processing the string to retrieve and display&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/spcimg.jpg&quot; alt=&quot;SPC&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Find the GitHub repo &lt;a href=&quot;https://github.com/rounakdatta/serial-port-comm-gui&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Sep 2017 00:00:00 +0530</pubDate>
        <link>https://rounakdatta.github.io/2017/09/02/spc-proj.html</link>
        <guid isPermaLink="true">https://rounakdatta.github.io/2017/09/02/spc-proj.html</guid>
        
        
      </item>
    
  </channel>
</rss>

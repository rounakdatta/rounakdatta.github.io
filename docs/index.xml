<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rounak&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on Rounak&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Written and published right from Emacs Org-mode.</copyright>
    <lastBuildDate>Sun, 03 Jan 2021 00:00:00 +0530</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My everyday tooling around OSS</title>
      <link>/posts/open-source-tools-everyday/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0530</pubDate>
      
      <guid>/posts/open-source-tools-everyday/</guid>
      <description>Speed and efficiency are two different things. ~Rasheed Ogunlaru
 We as engineers love streamlining our workflows. It all boils down to the sheer need and desire for greater control and visibility. In a utopian world, how we think of DAOs is the same way we think of our workflows in the real world. The term workflows I&amp;rsquo;m using could essentially be as simple as cleaning junk (yeah, those donotreply promotional) emails to setting up a blog publishing pipeline.</description>
    </item>
    
    <item>
      <title>GoDFS - a simple Distributed FileSystem written in Go</title>
      <link>/posts/godfs/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0530</pubDate>
      
      <guid>/posts/godfs/</guid>
      <description>Redundancy is the key in software engineering ~Paul Klint
 I&amp;rsquo;ve been midway through Designing Data-Intensive Applications and implementing such a distributed system and its algorithms was always on my stack. This implementation tries to cover most of the important aspects, yet largely simplified.
The source for this project is rounakdatta/GoDFS.
Building Go Distributed File System Abstracting away the odds Proven systems like Google FileSystem (GFS) and Hadoop Distributed FileSystem have almost made developers take distributed architectures for granted.</description>
    </item>
    
    <item>
      <title>Better managing self-finance with Firefly</title>
      <link>/posts/firefly/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0530</pubDate>
      
      <guid>/posts/firefly/</guid>
      <description>To what extent do we track our money? Sites and apps are constantly tracking us so closely, with the only intention of knowing us better and presenting us with more self-relatable content (and potentially ads) and engage us even more into the product. We track our shipments, food, health, habits and reasonably quite everything that costs us time. Yeah, of course we do try to keep a sense of our spendings and definitely give a appreciating / regretting thought at the month-end.</description>
    </item>
    
    <item>
      <title>PagerDuty for Things - An interesting IoT project</title>
      <link>/posts/pagerduty-for-iot/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0530</pubDate>
      
      <guid>/posts/pagerduty-for-iot/</guid>
      <description>An interesting project we worked on being at college was building a PagerDuty-like watchdog for monitoring physical things&#39; state. And the implementation of choice was liquid level.
What&amp;rsquo;s up The project is all about an integration effort of an ESP32-connected weight detection machinery to an online service to unlock possibilities like remote monitoring and alerting. To elucidate, think of remotely monitoring your gas cylinder&amp;rsquo;s fuel level and getting alerted whenever the level drops below a custom-defined threshold.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Rounak Datta   Today I&amp;rsquo;m hustling with the amazing team at Disney+ Hotstar to build a kickass Data Platform in the day.
And when it&amp;rsquo;s not the day, I love tinkering with either classic projects or unconventional ideas. I&amp;rsquo;m an avid reader (mostly technology and history), regular cyclist, music curator and an aspiring mathematician.
I invest a lot into understanding and researching about large-scale systems, the beauty of mathematics behind the gears of artificially intelligent systems.</description>
    </item>
    
  </channel>
</rss>

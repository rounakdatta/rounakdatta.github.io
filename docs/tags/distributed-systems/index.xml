<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distributed-systems on Rounak&#39;s Blog</title>
    <link>/tags/distributed-systems/</link>
    <description>Recent content in distributed-systems on Rounak&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Written and published right from Emacs Org-mode.</copyright>
    <lastBuildDate>Sun, 09 Aug 2020 00:00:00 +0530</lastBuildDate><atom:link href="/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GoDFS - a simple Distributed FileSystem written in Go</title>
      <link>/posts/godfs/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0530</pubDate>
      
      <guid>/posts/godfs/</guid>
      <description>Redundancy is the key in software engineering ~Paul Klint
 I&amp;rsquo;ve been midway through Designing Data-Intensive Applications and implementing such a distributed system and its algorithms was always on my stack. This implementation tries to cover most of the important aspects, yet largely simplified.
The source for this project is rounakdatta/GoDFS.
Building Go Distributed File System Abstracting away the odds Proven systems like Google FileSystem (GFS) and Hadoop Distributed FileSystem have almost made developers take distributed architectures for granted.</description>
    </item>
    
  </channel>
</rss>

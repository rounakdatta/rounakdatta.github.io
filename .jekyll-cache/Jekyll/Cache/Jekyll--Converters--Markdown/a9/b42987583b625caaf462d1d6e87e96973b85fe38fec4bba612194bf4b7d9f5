I"ˆ<p>Quill Audits is a smart contract analysis platform provided by QuillHash Technologies. Itâ€™s a fully automated platform for getting smart contracts checked for security vulnerabilities as well as efficiency of code. <strong>Oyente</strong> for Ethereum is currently a trusted automated open-source smart-contract analysis tool. Quill Audits uses tweaked Oyente back-end with other sophistications to analyze contracts under-the-hood and return analysis results. Also, it uses <strong>Solidity-Coverage</strong> to provide code coverage tools to analyze if there are are redundant lines of code by running unit tests. Often, redundant lines of code are required to be replaced / removed. Quill Audits is powered by Node.js and is an extremely fast and usable tool for smart contract security analysis.</p>

<p>Quill Audits platform provides for manual auditing as well. The platform also provides an escrow platform to request for expert contract auditing at the least bid.</p>

<p><br />
<img src="https://cdn-images-1.medium.com/max/1600/1*fVizVy5bQ9j-845RwXjhBg.png" alt="Quill Audits Architecture" class="img-responsive" /></p>

<p><br />
The platform is live at <a href="https://audits.quillhash.com/smart-contract-audit">audits.quillhash.com</a>. Or go ahead and read the <a href="https://medium.com/quillhash/quill-audits-the-smart-contract-security-audit-platform-9ea1950ad6e">Medium article</a>.</p>

<p><br /></p>
<center>
<button id="likeButton" onclick="likeItem()"><img src="https://cdn3.iconfinder.com/data/icons/jolly-icons-free/64/thumb-up_64.png" /></button>
<div id="likeCount"></div>
</center>

<script type="text/javascript">

let postTitle = "quill-audits"

let myLocation = "";

function getLocationDetails() {
$.get("https://json.geoiplookup.io/", function (response) {
    myLocation = response;
});
}

function likeItem() {
  getLocationDetails();

  setTimeout(function(){

  var xhr = new XMLHttpRequest();
  xhr.withCredentials = false;
  
  xhr.addEventListener("readystatechange", function () {
    if (this.readyState === 4) {
      console.log(this.responseText);
      showLikes();
    }
  });
  
  xhr.open("POST", "https://rounakdatta.pythonanywhere.com/like/post/" + postTitle);
  xhr.setRequestHeader("content-type", "application/json");
  xhr.setRequestHeader('Access-Control-Allow-Origin', '*')
  xhr.setRequestHeader("Access-Control-Allow-Credentials", true);
  xhr.setRequestHeader("cache-control", "no-cache");
  xhr.setRequestHeader("postman-token", "6b90fa48-bca5-8464-df36-a229e6b15f2a");
  
  console.log(JSON.stringify(myLocation));
  xhr.send(JSON.stringify(myLocation));

  }, 1000);
}

function showLikes() {

	var data = null;
	
	var xhr = new XMLHttpRequest();
	xhr.withCredentials = false;
	
	xhr.addEventListener("readystatechange", function () {
	  if (this.readyState === 4) {
	    console.log(this.responseText);
	    //alert(this.responseText);
	    document.getElementById('likeCount').innerHTML = "<h4>" + String(this.responseText) + "</h4>";
	  }
	});
	
	xhr.open("GET", "https://rounakdatta.pythonanywhere.com/like/post/" + postTitle);
	xhr.setRequestHeader("cache-control", "no-cache");
	xhr.setRequestHeader('Access-Control-Allow-Origin', '*')
	xhr.setRequestHeader("Access-Control-Allow-Credentials", true);
	xhr.setRequestHeader("postman-token", "5e82f0d5-65e0-a89a-729b-10c6f90fffb9");
	
	xhr.send(data);

}

</script>

<script>
$( document ).ready(function() {
    showLikes();
});
</script>

:ET
I"U<p>This is an assignment for the application to <strong>Terribly Tiny Tales</strong> for their Software Engineering Internship for summer 2018.</p>

<ul>
  <li>The text is first web-scraped using requests, cleaned and put into data-structure</li>
  <li>Uses trie data-structure to store the words (and their breakups)</li>
  <li>Uses list-of-lists to store the word set (word, frequency)</li>
  <li>Flask web-sever to render the content to HTML tables</li>
</ul>

<h3 id="local-usage">Local usage</h3>

<p><code class="highlighter-rouge">git clone https://github.com/rounakdatta/terriblytinytales.git</code></p>

<p><code class="highlighter-rouge">make</code></p>

<h3 id="working">Working</h3>

<ul>
  <li>First, the script scrapes the text file from <a href="http://terriblytinytales.com/test.txt">here</a> using <em>requests</em> module.
 The entire text is split into words and converted to lower case.</li>
  <li>Then, the words are put into trie data-structure as well as added to the final_list <em>[ Σ[‘key’, ‘count’] ]</em> with count=0.
 Whenever there is a collision (the word exists), the final_list only is updated (count increased).</li>
  <li>Apart from this, the trie data-structure implemented here has attributes data (char), list of children, branch_end, count and has functions for addition of data as well as finding if data exists.</li>
  <li>To render a frontend to it, Flask is used. The API to the above algorithm is <em>give_count(n)</em> which is called from Flask <em>app.py</em> to get the final_list.
 To render it, <em>tables.py</em> converts it into HTML table and creates <em>result.html</em> (of course using <em>os</em> py-module) which is then displayed.</li>
</ul>

<p>Here’s a quick visualization of the trie data-structure :</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                   *
                /     \
              a         b
            /   \       |
          ap     as     ba
          /\      |     / \
        app apk   ask  bac  bak
                        |     |
                       back  bake
</code></pre></div></div>

<p>Scripting and markup languages used : <strong>Python</strong>, <strong>HTML</strong><br />
Frameworks used : <strong>Flask</strong><br />
PaaS used : <strong>Heroku</strong>, <strong>PythonAnywhere</strong><br /></p>

<p><img src="https://github.com/rounakdatta/terriblytinytales/blob/master/demo/demo.gif" alt="Sample" /></p>

<p>The demo is currently live at <a href="http://tttales.tk">tttales.tk</a>.</p>

<p>Find the GitHub repo <a href="https://github.com/rounakdatta/terriblytinytales">here</a>.</p>

<p><br /></p>
<center>
<button id="likeButton" onclick="likeItem()"><img src="https://cdn3.iconfinder.com/data/icons/jolly-icons-free/64/thumb-up_64.png" /></button>
<div id="likeCount"></div>
</center>

<script type="text/javascript">

let postTitle = "ttt"

let myLocation = "";

function getLocationDetails() {
$.get("https://json.geoiplookup.io/", function (response) {
    myLocation = response;
});
}

function likeItem() {
  getLocationDetails();

  setTimeout(function(){

  var xhr = new XMLHttpRequest();
  xhr.withCredentials = false;
  
  xhr.addEventListener("readystatechange", function () {
    if (this.readyState === 4) {
      console.log(this.responseText);
      showLikes();
    }
  });
  
  xhr.open("POST", "https://rounakdatta.pythonanywhere.com/like/post/" + postTitle);
  xhr.setRequestHeader("content-type", "application/json");
  xhr.setRequestHeader('Access-Control-Allow-Origin', '*')
  xhr.setRequestHeader("Access-Control-Allow-Credentials", true);
  xhr.setRequestHeader("cache-control", "no-cache");
  xhr.setRequestHeader("postman-token", "6b90fa48-bca5-8464-df36-a229e6b15f2a");
  
  console.log(JSON.stringify(myLocation));
  xhr.send(JSON.stringify(myLocation));

  }, 1000);
}

function showLikes() {

	var data = null;
	
	var xhr = new XMLHttpRequest();
	xhr.withCredentials = false;
	
	xhr.addEventListener("readystatechange", function () {
	  if (this.readyState === 4) {
	    console.log(this.responseText);
	    //alert(this.responseText);
	    document.getElementById('likeCount').innerHTML = "<h4>" + String(this.responseText) + "</h4>";
	  }
	});
	
	xhr.open("GET", "https://rounakdatta.pythonanywhere.com/like/post/" + postTitle);
	xhr.setRequestHeader("cache-control", "no-cache");
	xhr.setRequestHeader('Access-Control-Allow-Origin', '*')
	xhr.setRequestHeader("Access-Control-Allow-Credentials", true);
	xhr.setRequestHeader("postman-token", "5e82f0d5-65e0-a89a-729b-10c6f90fffb9");
	
	xhr.send(data);

}

</script>

<script>
$( document ).ready(function() {
    showLikes();
});
</script>

:ET